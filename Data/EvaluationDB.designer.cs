#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SystemOperationsEvaluation.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EvaluationDB")]
	public partial class EvaluationDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLevelQuestion(LevelQuestion instance);
    partial void UpdateLevelQuestion(LevelQuestion instance);
    partial void DeleteLevelQuestion(LevelQuestion instance);
    partial void InsertQuestion(Question instance);
    partial void UpdateQuestion(Question instance);
    partial void DeleteQuestion(Question instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertDimensionRole(DimensionRole instance);
    partial void UpdateDimensionRole(DimensionRole instance);
    partial void DeleteDimensionRole(DimensionRole instance);
    partial void InsertLevel(Level instance);
    partial void UpdateLevel(Level instance);
    partial void DeleteLevel(Level instance);
    partial void InsertEvaluationResult(EvaluationResult instance);
    partial void UpdateEvaluationResult(EvaluationResult instance);
    partial void DeleteEvaluationResult(EvaluationResult instance);
    partial void InsertDimension(Dimension instance);
    partial void UpdateDimension(Dimension instance);
    partial void DeleteDimension(Dimension instance);
    partial void InsertUserLoginHistory(UserLoginHistory instance);
    partial void UpdateUserLoginHistory(UserLoginHistory instance);
    partial void DeleteUserLoginHistory(UserLoginHistory instance);
    partial void InsertEvaluation(Evaluation instance);
    partial void UpdateEvaluation(Evaluation instance);
    partial void DeleteEvaluation(Evaluation instance);
    partial void InsertResponse(Response instance);
    partial void UpdateResponse(Response instance);
    partial void DeleteResponse(Response instance);
    partial void InsertEvaluationLevel(EvaluationLevel instance);
    partial void UpdateEvaluationLevel(EvaluationLevel instance);
    partial void DeleteEvaluationLevel(EvaluationLevel instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertTimeZone(TimeZone instance);
    partial void UpdateTimeZone(TimeZone instance);
    partial void DeleteTimeZone(TimeZone instance);
    #endregion
		
		public EvaluationDBDataContext() :
	    base(global::SystemOperationsEvaluation.Data.Properties.Settings.Default.EvaluationDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EvaluationDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EvaluationDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EvaluationDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EvaluationDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<LevelQuestion> LevelQuestions
		{
			get
			{
				return this.GetTable<LevelQuestion>();
			}
		}
		
		public System.Data.Linq.Table<Question> Questions
		{
			get
			{
				return this.GetTable<Question>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<DimensionRole> DimensionRoles
		{
			get
			{
				return this.GetTable<DimensionRole>();
			}
		}
		
		public System.Data.Linq.Table<Level> Levels
		{
			get
			{
				return this.GetTable<Level>();
			}
		}
		
		public System.Data.Linq.Table<EvaluationResult> EvaluationResults
		{
			get
			{
				return this.GetTable<EvaluationResult>();
			}
		}
		
		public System.Data.Linq.Table<Dimension> Dimensions
		{
			get
			{
				return this.GetTable<Dimension>();
			}
		}
		
		public System.Data.Linq.Table<UserLoginHistory> UserLoginHistories
		{
			get
			{
				return this.GetTable<UserLoginHistory>();
			}
		}
		
		public System.Data.Linq.Table<Evaluation> Evaluations
		{
			get
			{
				return this.GetTable<Evaluation>();
			}
		}
		
		public System.Data.Linq.Table<Response> Responses
		{
			get
			{
				return this.GetTable<Response>();
			}
		}
		
		public System.Data.Linq.Table<EvaluationLevel> EvaluationLevels
		{
			get
			{
				return this.GetTable<EvaluationLevel>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<TimeZone> TimeZones
		{
			get
			{
				return this.GetTable<TimeZone>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LevelQuestions")]
	public partial class LevelQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LevelQuestionID;
		
		private int _LevelID;
		
		private int _QuestionID;
		
		private System.Nullable<int> _CongestionID;
		
		private EntityRef<Question> _Question;
		
		private EntityRef<Level> _Level;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLevelQuestionIDChanging(int value);
    partial void OnLevelQuestionIDChanged();
    partial void OnLevelIDChanging(int value);
    partial void OnLevelIDChanged();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnCongestionIDChanging(System.Nullable<int> value);
    partial void OnCongestionIDChanged();
    #endregion
		
		public LevelQuestion()
		{
			this._Question = default(EntityRef<Question>);
			this._Level = default(EntityRef<Level>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelQuestionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LevelQuestionID
		{
			get
			{
				return this._LevelQuestionID;
			}
			set
			{
				if ((this._LevelQuestionID != value))
				{
					this.OnLevelQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._LevelQuestionID = value;
					this.SendPropertyChanged("LevelQuestionID");
					this.OnLevelQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelID", DbType="Int NOT NULL")]
		public int LevelID
		{
			get
			{
				return this._LevelID;
			}
			set
			{
				if ((this._LevelID != value))
				{
					if (this._Level.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLevelIDChanging(value);
					this.SendPropertyChanging();
					this._LevelID = value;
					this.SendPropertyChanged("LevelID");
					this.OnLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL")]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					if (this._Question.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CongestionID", DbType="Int")]
		public System.Nullable<int> CongestionID
		{
			get
			{
				return this._CongestionID;
			}
			set
			{
				if ((this._CongestionID != value))
				{
					this.OnCongestionIDChanging(value);
					this.SendPropertyChanging();
					this._CongestionID = value;
					this.SendPropertyChanged("CongestionID");
					this.OnCongestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_LevelQuestion", Storage="_Question", ThisKey="QuestionID", OtherKey="QuestionID", IsForeignKey=true)]
		public Question Question
		{
			get
			{
				return this._Question.Entity;
			}
			set
			{
				Question previousValue = this._Question.Entity;
				if (((previousValue != value) 
							|| (this._Question.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Question.Entity = null;
						previousValue.LevelQuestions.Remove(this);
					}
					this._Question.Entity = value;
					if ((value != null))
					{
						value.LevelQuestions.Add(this);
						this._QuestionID = value.QuestionID;
					}
					else
					{
						this._QuestionID = default(int);
					}
					this.SendPropertyChanged("Question");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Level_LevelQuestion", Storage="_Level", ThisKey="LevelID", OtherKey="LevelID", IsForeignKey=true)]
		public Level Level
		{
			get
			{
				return this._Level.Entity;
			}
			set
			{
				Level previousValue = this._Level.Entity;
				if (((previousValue != value) 
							|| (this._Level.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Level.Entity = null;
						previousValue.LevelQuestions.Remove(this);
					}
					this._Level.Entity = value;
					if ((value != null))
					{
						value.LevelQuestions.Add(this);
						this._LevelID = value.LevelID;
					}
					else
					{
						this._LevelID = default(int);
					}
					this.SendPropertyChanged("Level");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Question")]
	public partial class Question : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuestionID;
		
		private string _Name;
		
		private string _Description;
		
		private string _ToolTip;
		
		private System.DateTime _DateCreated;
		
		private System.DateTime _DateModified;
		
		private EntitySet<LevelQuestion> _LevelQuestions;
		
		private EntitySet<Response> _Responses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnToolTipChanging(string value);
    partial void OnToolTipChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public Question()
		{
			this._LevelQuestions = new EntitySet<LevelQuestion>(new Action<LevelQuestion>(this.attach_LevelQuestions), new Action<LevelQuestion>(this.detach_LevelQuestions));
			this._Responses = new EntitySet<Response>(new Action<Response>(this.attach_Responses), new Action<Response>(this.detach_Responses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToolTip", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string ToolTip
		{
			get
			{
				return this._ToolTip;
			}
			set
			{
				if ((this._ToolTip != value))
				{
					this.OnToolTipChanging(value);
					this.SendPropertyChanging();
					this._ToolTip = value;
					this.SendPropertyChanged("ToolTip");
					this.OnToolTipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_LevelQuestion", Storage="_LevelQuestions", ThisKey="QuestionID", OtherKey="QuestionID")]
		public EntitySet<LevelQuestion> LevelQuestions
		{
			get
			{
				return this._LevelQuestions;
			}
			set
			{
				this._LevelQuestions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_Response", Storage="_Responses", ThisKey="QuestionID", OtherKey="QuestionID")]
		public EntitySet<Response> Responses
		{
			get
			{
				return this._Responses;
			}
			set
			{
				this._Responses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LevelQuestions(LevelQuestion entity)
		{
			this.SendPropertyChanging();
			entity.Question = this;
		}
		
		private void detach_LevelQuestions(LevelQuestion entity)
		{
			this.SendPropertyChanging();
			entity.Question = null;
		}
		
		private void attach_Responses(Response entity)
		{
			this.SendPropertyChanging();
			entity.Question = this;
		}
		
		private void detach_Responses(Response entity)
		{
			this.SendPropertyChanging();
			entity.Question = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleID;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _DateCreated;
		
		private System.DateTime _DateModified;
		
		private EntitySet<DimensionRole> _DimensionRoles;
		
		private EntitySet<Evaluation> _Evaluations;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public Role()
		{
			this._DimensionRoles = new EntitySet<DimensionRole>(new Action<DimensionRole>(this.attach_DimensionRoles), new Action<DimensionRole>(this.detach_DimensionRoles));
			this._Evaluations = new EntitySet<Evaluation>(new Action<Evaluation>(this.attach_Evaluations), new Action<Evaluation>(this.detach_Evaluations));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_DimensionRole", Storage="_DimensionRoles", ThisKey="RoleID", OtherKey="RoleID")]
		public EntitySet<DimensionRole> DimensionRoles
		{
			get
			{
				return this._DimensionRoles;
			}
			set
			{
				this._DimensionRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Evaluation", Storage="_Evaluations", ThisKey="RoleID", OtherKey="RoleID")]
		public EntitySet<Evaluation> Evaluations
		{
			get
			{
				return this._Evaluations;
			}
			set
			{
				this._Evaluations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Users", ThisKey="RoleID", OtherKey="RoleID")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DimensionRoles(DimensionRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_DimensionRoles(DimensionRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_Evaluations(Evaluation entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Evaluations(Evaluation entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DimensionRole")]
	public partial class DimensionRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DimensionRoleID;
		
		private string _Name;
		
		private string _Description;
		
		private int _DimensionID;
		
		private int _RoleID;
		
		private System.DateTime _DateCreated;
		
		private System.DateTime _DateModified;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<Dimension> _Dimension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDimensionRoleIDChanging(int value);
    partial void OnDimensionRoleIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDimensionIDChanging(int value);
    partial void OnDimensionIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public DimensionRole()
		{
			this._Role = default(EntityRef<Role>);
			this._Dimension = default(EntityRef<Dimension>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DimensionRoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DimensionRoleID
		{
			get
			{
				return this._DimensionRoleID;
			}
			set
			{
				if ((this._DimensionRoleID != value))
				{
					this.OnDimensionRoleIDChanging(value);
					this.SendPropertyChanging();
					this._DimensionRoleID = value;
					this.SendPropertyChanged("DimensionRoleID");
					this.OnDimensionRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DimensionID", DbType="Int NOT NULL")]
		public int DimensionID
		{
			get
			{
				return this._DimensionID;
			}
			set
			{
				if ((this._DimensionID != value))
				{
					if (this._Dimension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDimensionIDChanging(value);
					this.SendPropertyChanging();
					this._DimensionID = value;
					this.SendPropertyChanged("DimensionID");
					this.OnDimensionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_DimensionRole", Storage="_Role", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.DimensionRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.DimensionRoles.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dimension_DimensionRole", Storage="_Dimension", ThisKey="DimensionID", OtherKey="DimensionID", IsForeignKey=true)]
		public Dimension Dimension
		{
			get
			{
				return this._Dimension.Entity;
			}
			set
			{
				Dimension previousValue = this._Dimension.Entity;
				if (((previousValue != value) 
							|| (this._Dimension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dimension.Entity = null;
						previousValue.DimensionRoles.Remove(this);
					}
					this._Dimension.Entity = value;
					if ((value != null))
					{
						value.DimensionRoles.Add(this);
						this._DimensionID = value.DimensionID;
					}
					else
					{
						this._DimensionID = default(int);
					}
					this.SendPropertyChanged("Dimension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Level]")]
	public partial class Level : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LevelID;
		
		private byte _LevelNumber;
		
		private string _Name;
		
		private string _Capability;
		
		private string _Description;
		
		private int _DimensionID;
		
		private string _PdfName;
		
		private System.DateTime _DateCreated;
		
		private System.DateTime _DateModified;
		
		private EntitySet<LevelQuestion> _LevelQuestions;
		
		private EntitySet<EvaluationLevel> _EvaluationLevels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLevelIDChanging(int value);
    partial void OnLevelIDChanged();
    partial void OnLevelNumberChanging(byte value);
    partial void OnLevelNumberChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCapabilityChanging(string value);
    partial void OnCapabilityChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDimensionIDChanging(int value);
    partial void OnDimensionIDChanged();
    partial void OnPdfNameChanging(string value);
    partial void OnPdfNameChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public Level()
		{
			this._LevelQuestions = new EntitySet<LevelQuestion>(new Action<LevelQuestion>(this.attach_LevelQuestions), new Action<LevelQuestion>(this.detach_LevelQuestions));
			this._EvaluationLevels = new EntitySet<EvaluationLevel>(new Action<EvaluationLevel>(this.attach_EvaluationLevels), new Action<EvaluationLevel>(this.detach_EvaluationLevels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LevelID
		{
			get
			{
				return this._LevelID;
			}
			set
			{
				if ((this._LevelID != value))
				{
					this.OnLevelIDChanging(value);
					this.SendPropertyChanging();
					this._LevelID = value;
					this.SendPropertyChanged("LevelID");
					this.OnLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelNumber", DbType="TinyInt NOT NULL")]
		public byte LevelNumber
		{
			get
			{
				return this._LevelNumber;
			}
			set
			{
				if ((this._LevelNumber != value))
				{
					this.OnLevelNumberChanging(value);
					this.SendPropertyChanging();
					this._LevelNumber = value;
					this.SendPropertyChanged("LevelNumber");
					this.OnLevelNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capability", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Capability
		{
			get
			{
				return this._Capability;
			}
			set
			{
				if ((this._Capability != value))
				{
					this.OnCapabilityChanging(value);
					this.SendPropertyChanging();
					this._Capability = value;
					this.SendPropertyChanged("Capability");
					this.OnCapabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DimensionID", DbType="Int NOT NULL")]
		public int DimensionID
		{
			get
			{
				return this._DimensionID;
			}
			set
			{
				if ((this._DimensionID != value))
				{
					this.OnDimensionIDChanging(value);
					this.SendPropertyChanging();
					this._DimensionID = value;
					this.SendPropertyChanged("DimensionID");
					this.OnDimensionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PdfName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PdfName
		{
			get
			{
				return this._PdfName;
			}
			set
			{
				if ((this._PdfName != value))
				{
					this.OnPdfNameChanging(value);
					this.SendPropertyChanging();
					this._PdfName = value;
					this.SendPropertyChanged("PdfName");
					this.OnPdfNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Level_LevelQuestion", Storage="_LevelQuestions", ThisKey="LevelID", OtherKey="LevelID")]
		public EntitySet<LevelQuestion> LevelQuestions
		{
			get
			{
				return this._LevelQuestions;
			}
			set
			{
				this._LevelQuestions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Level_EvaluationLevel", Storage="_EvaluationLevels", ThisKey="LevelID", OtherKey="LevelID")]
		public EntitySet<EvaluationLevel> EvaluationLevels
		{
			get
			{
				return this._EvaluationLevels;
			}
			set
			{
				this._EvaluationLevels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LevelQuestions(LevelQuestion entity)
		{
			this.SendPropertyChanging();
			entity.Level = this;
		}
		
		private void detach_LevelQuestions(LevelQuestion entity)
		{
			this.SendPropertyChanging();
			entity.Level = null;
		}
		
		private void attach_EvaluationLevels(EvaluationLevel entity)
		{
			this.SendPropertyChanging();
			entity.Level = this;
		}
		
		private void detach_EvaluationLevels(EvaluationLevel entity)
		{
			this.SendPropertyChanging();
			entity.Level = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EvaluationResult")]
	public partial class EvaluationResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EvaluationResultID;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _DateCreated;
		
		private System.DateTime _DateModified;
		
		private EntitySet<Evaluation> _Evaluations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEvaluationResultIDChanging(int value);
    partial void OnEvaluationResultIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public EvaluationResult()
		{
			this._Evaluations = new EntitySet<Evaluation>(new Action<Evaluation>(this.attach_Evaluations), new Action<Evaluation>(this.detach_Evaluations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationResultID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EvaluationResultID
		{
			get
			{
				return this._EvaluationResultID;
			}
			set
			{
				if ((this._EvaluationResultID != value))
				{
					this.OnEvaluationResultIDChanging(value);
					this.SendPropertyChanging();
					this._EvaluationResultID = value;
					this.SendPropertyChanged("EvaluationResultID");
					this.OnEvaluationResultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationResult_Evaluation", Storage="_Evaluations", ThisKey="EvaluationResultID", OtherKey="EvaluationResultID")]
		public EntitySet<Evaluation> Evaluations
		{
			get
			{
				return this._Evaluations;
			}
			set
			{
				this._Evaluations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Evaluations(Evaluation entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationResult = this;
		}
		
		private void detach_Evaluations(Evaluation entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationResult = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dimension")]
	public partial class Dimension : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DimensionID;
		
		private string _Name;
		
		private string _Description;
		
		private string _Summary;
		
		private string _TitleImageName;
		
		private string _ToolTip;
		
		private System.DateTime _DateCreated;
		
		private System.DateTime _DateModified;
		
		private System.Nullable<int> _ParentDimensionID;
		
		private EntitySet<DimensionRole> _DimensionRoles;
		
		private EntitySet<Dimension> _Dimensions;
		
		private EntitySet<Response> _Responses;
		
		private EntityRef<Dimension> _Dimension1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDimensionIDChanging(int value);
    partial void OnDimensionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnTitleImageNameChanging(string value);
    partial void OnTitleImageNameChanged();
    partial void OnToolTipChanging(string value);
    partial void OnToolTipChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    partial void OnParentDimensionIDChanging(System.Nullable<int> value);
    partial void OnParentDimensionIDChanged();
    #endregion
		
		public Dimension()
		{
			this._DimensionRoles = new EntitySet<DimensionRole>(new Action<DimensionRole>(this.attach_DimensionRoles), new Action<DimensionRole>(this.detach_DimensionRoles));
			this._Dimensions = new EntitySet<Dimension>(new Action<Dimension>(this.attach_Dimensions), new Action<Dimension>(this.detach_Dimensions));
			this._Responses = new EntitySet<Response>(new Action<Response>(this.attach_Responses), new Action<Response>(this.detach_Responses));
			this._Dimension1 = default(EntityRef<Dimension>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DimensionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DimensionID
		{
			get
			{
				return this._DimensionID;
			}
			set
			{
				if ((this._DimensionID != value))
				{
					this.OnDimensionIDChanging(value);
					this.SendPropertyChanging();
					this._DimensionID = value;
					this.SendPropertyChanged("DimensionID");
					this.OnDimensionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(1000)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleImageName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string TitleImageName
		{
			get
			{
				return this._TitleImageName;
			}
			set
			{
				if ((this._TitleImageName != value))
				{
					this.OnTitleImageNameChanging(value);
					this.SendPropertyChanging();
					this._TitleImageName = value;
					this.SendPropertyChanged("TitleImageName");
					this.OnTitleImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToolTip", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string ToolTip
		{
			get
			{
				return this._ToolTip;
			}
			set
			{
				if ((this._ToolTip != value))
				{
					this.OnToolTipChanging(value);
					this.SendPropertyChanging();
					this._ToolTip = value;
					this.SendPropertyChanged("ToolTip");
					this.OnToolTipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentDimensionID", DbType="Int")]
		public System.Nullable<int> ParentDimensionID
		{
			get
			{
				return this._ParentDimensionID;
			}
			set
			{
				if ((this._ParentDimensionID != value))
				{
					if (this._Dimension1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentDimensionIDChanging(value);
					this.SendPropertyChanging();
					this._ParentDimensionID = value;
					this.SendPropertyChanged("ParentDimensionID");
					this.OnParentDimensionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dimension_DimensionRole", Storage="_DimensionRoles", ThisKey="DimensionID", OtherKey="DimensionID")]
		public EntitySet<DimensionRole> DimensionRoles
		{
			get
			{
				return this._DimensionRoles;
			}
			set
			{
				this._DimensionRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dimension_Dimension", Storage="_Dimensions", ThisKey="DimensionID", OtherKey="ParentDimensionID")]
		public EntitySet<Dimension> Dimensions
		{
			get
			{
				return this._Dimensions;
			}
			set
			{
				this._Dimensions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dimension_Response", Storage="_Responses", ThisKey="DimensionID", OtherKey="DimensionID")]
		public EntitySet<Response> Responses
		{
			get
			{
				return this._Responses;
			}
			set
			{
				this._Responses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dimension_Dimension", Storage="_Dimension1", ThisKey="ParentDimensionID", OtherKey="DimensionID", IsForeignKey=true)]
		public Dimension Dimension1
		{
			get
			{
				return this._Dimension1.Entity;
			}
			set
			{
				Dimension previousValue = this._Dimension1.Entity;
				if (((previousValue != value) 
							|| (this._Dimension1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dimension1.Entity = null;
						previousValue.Dimensions.Remove(this);
					}
					this._Dimension1.Entity = value;
					if ((value != null))
					{
						value.Dimensions.Add(this);
						this._ParentDimensionID = value.DimensionID;
					}
					else
					{
						this._ParentDimensionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Dimension1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DimensionRoles(DimensionRole entity)
		{
			this.SendPropertyChanging();
			entity.Dimension = this;
		}
		
		private void detach_DimensionRoles(DimensionRole entity)
		{
			this.SendPropertyChanging();
			entity.Dimension = null;
		}
		
		private void attach_Dimensions(Dimension entity)
		{
			this.SendPropertyChanging();
			entity.Dimension1 = this;
		}
		
		private void detach_Dimensions(Dimension entity)
		{
			this.SendPropertyChanging();
			entity.Dimension1 = null;
		}
		
		private void attach_Responses(Response entity)
		{
			this.SendPropertyChanging();
			entity.Dimension = this;
		}
		
		private void detach_Responses(Response entity)
		{
			this.SendPropertyChanging();
			entity.Dimension = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLoginHistory")]
	public partial class UserLoginHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private System.DateTime _LoginDate;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnLoginDateChanging(System.DateTime value);
    partial void OnLoginDateChanged();
    #endregion
		
		public UserLoginHistory()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LoginDate
		{
			get
			{
				return this._LoginDate;
			}
			set
			{
				if ((this._LoginDate != value))
				{
					this.OnLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LoginDate = value;
					this.SendPropertyChanged("LoginDate");
					this.OnLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserLoginHistory", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserLoginHistories.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserLoginHistories.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Evaluation")]
	public partial class Evaluation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EvaluationID;
		
		private string _Name;
		
		private string _Description;
		
		private int _StatusID;
		
		private int _UserID;
		
		private int _RoleID;
		
		private System.Nullable<int> _EvaluationResultID;
		
		private System.DateTime _DateCreated;
		
		private System.DateTime _DateModified;
		
		private EntitySet<Response> _Responses;
		
		private EntitySet<EvaluationLevel> _EvaluationLevels;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<EvaluationResult> _EvaluationResult;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEvaluationIDChanging(int value);
    partial void OnEvaluationIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnEvaluationResultIDChanging(System.Nullable<int> value);
    partial void OnEvaluationResultIDChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public Evaluation()
		{
			this._Responses = new EntitySet<Response>(new Action<Response>(this.attach_Responses), new Action<Response>(this.detach_Responses));
			this._EvaluationLevels = new EntitySet<EvaluationLevel>(new Action<EvaluationLevel>(this.attach_EvaluationLevels), new Action<EvaluationLevel>(this.detach_EvaluationLevels));
			this._Role = default(EntityRef<Role>);
			this._EvaluationResult = default(EntityRef<EvaluationResult>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EvaluationID
		{
			get
			{
				return this._EvaluationID;
			}
			set
			{
				if ((this._EvaluationID != value))
				{
					this.OnEvaluationIDChanging(value);
					this.SendPropertyChanging();
					this._EvaluationID = value;
					this.SendPropertyChanged("EvaluationID");
					this.OnEvaluationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationResultID", DbType="Int")]
		public System.Nullable<int> EvaluationResultID
		{
			get
			{
				return this._EvaluationResultID;
			}
			set
			{
				if ((this._EvaluationResultID != value))
				{
					if (this._EvaluationResult.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationResultIDChanging(value);
					this.SendPropertyChanging();
					this._EvaluationResultID = value;
					this.SendPropertyChanged("EvaluationResultID");
					this.OnEvaluationResultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Evaluation_Response", Storage="_Responses", ThisKey="EvaluationID", OtherKey="EvaluationID")]
		public EntitySet<Response> Responses
		{
			get
			{
				return this._Responses;
			}
			set
			{
				this._Responses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Evaluation_EvaluationLevel", Storage="_EvaluationLevels", ThisKey="EvaluationID", OtherKey="EvaluationID")]
		public EntitySet<EvaluationLevel> EvaluationLevels
		{
			get
			{
				return this._EvaluationLevels;
			}
			set
			{
				this._EvaluationLevels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Evaluation", Storage="_Role", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Evaluations.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Evaluations.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationResult_Evaluation", Storage="_EvaluationResult", ThisKey="EvaluationResultID", OtherKey="EvaluationResultID", IsForeignKey=true)]
		public EvaluationResult EvaluationResult
		{
			get
			{
				return this._EvaluationResult.Entity;
			}
			set
			{
				EvaluationResult previousValue = this._EvaluationResult.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationResult.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationResult.Entity = null;
						previousValue.Evaluations.Remove(this);
					}
					this._EvaluationResult.Entity = value;
					if ((value != null))
					{
						value.Evaluations.Add(this);
						this._EvaluationResultID = value.EvaluationResultID;
					}
					else
					{
						this._EvaluationResultID = default(Nullable<int>);
					}
					this.SendPropertyChanged("EvaluationResult");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Evaluation", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Evaluations.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Evaluations.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Responses(Response entity)
		{
			this.SendPropertyChanging();
			entity.Evaluation = this;
		}
		
		private void detach_Responses(Response entity)
		{
			this.SendPropertyChanging();
			entity.Evaluation = null;
		}
		
		private void attach_EvaluationLevels(EvaluationLevel entity)
		{
			this.SendPropertyChanging();
			entity.Evaluation = this;
		}
		
		private void detach_EvaluationLevels(EvaluationLevel entity)
		{
			this.SendPropertyChanging();
			entity.Evaluation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Response")]
	public partial class Response : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResponseID;
		
		private int _QuestionID;
		
		private int _EvaluationID;
		
		private int _DimensionID;
		
		private int _SelectedValue;
		
		private string _Name;
		
		private System.DateTime _DateCreated;
		
		private System.DateTime _DateModified;
		
		private EntityRef<Dimension> _Dimension;
		
		private EntityRef<Evaluation> _Evaluation;
		
		private EntityRef<Question> _Question;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResponseIDChanging(int value);
    partial void OnResponseIDChanged();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnEvaluationIDChanging(int value);
    partial void OnEvaluationIDChanged();
    partial void OnDimensionIDChanging(int value);
    partial void OnDimensionIDChanged();
    partial void OnSelectedValueChanging(int value);
    partial void OnSelectedValueChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public Response()
		{
			this._Dimension = default(EntityRef<Dimension>);
			this._Evaluation = default(EntityRef<Evaluation>);
			this._Question = default(EntityRef<Question>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ResponseID
		{
			get
			{
				return this._ResponseID;
			}
			set
			{
				if ((this._ResponseID != value))
				{
					this.OnResponseIDChanging(value);
					this.SendPropertyChanging();
					this._ResponseID = value;
					this.SendPropertyChanged("ResponseID");
					this.OnResponseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL")]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					if (this._Question.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationID", DbType="Int NOT NULL")]
		public int EvaluationID
		{
			get
			{
				return this._EvaluationID;
			}
			set
			{
				if ((this._EvaluationID != value))
				{
					if (this._Evaluation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationIDChanging(value);
					this.SendPropertyChanging();
					this._EvaluationID = value;
					this.SendPropertyChanged("EvaluationID");
					this.OnEvaluationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DimensionID", DbType="Int NOT NULL")]
		public int DimensionID
		{
			get
			{
				return this._DimensionID;
			}
			set
			{
				if ((this._DimensionID != value))
				{
					if (this._Dimension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDimensionIDChanging(value);
					this.SendPropertyChanging();
					this._DimensionID = value;
					this.SendPropertyChanged("DimensionID");
					this.OnDimensionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectedValue", DbType="Int NOT NULL")]
		public int SelectedValue
		{
			get
			{
				return this._SelectedValue;
			}
			set
			{
				if ((this._SelectedValue != value))
				{
					this.OnSelectedValueChanging(value);
					this.SendPropertyChanging();
					this._SelectedValue = value;
					this.SendPropertyChanged("SelectedValue");
					this.OnSelectedValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dimension_Response", Storage="_Dimension", ThisKey="DimensionID", OtherKey="DimensionID", IsForeignKey=true)]
		public Dimension Dimension
		{
			get
			{
				return this._Dimension.Entity;
			}
			set
			{
				Dimension previousValue = this._Dimension.Entity;
				if (((previousValue != value) 
							|| (this._Dimension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dimension.Entity = null;
						previousValue.Responses.Remove(this);
					}
					this._Dimension.Entity = value;
					if ((value != null))
					{
						value.Responses.Add(this);
						this._DimensionID = value.DimensionID;
					}
					else
					{
						this._DimensionID = default(int);
					}
					this.SendPropertyChanged("Dimension");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Evaluation_Response", Storage="_Evaluation", ThisKey="EvaluationID", OtherKey="EvaluationID", IsForeignKey=true)]
		public Evaluation Evaluation
		{
			get
			{
				return this._Evaluation.Entity;
			}
			set
			{
				Evaluation previousValue = this._Evaluation.Entity;
				if (((previousValue != value) 
							|| (this._Evaluation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Evaluation.Entity = null;
						previousValue.Responses.Remove(this);
					}
					this._Evaluation.Entity = value;
					if ((value != null))
					{
						value.Responses.Add(this);
						this._EvaluationID = value.EvaluationID;
					}
					else
					{
						this._EvaluationID = default(int);
					}
					this.SendPropertyChanged("Evaluation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_Response", Storage="_Question", ThisKey="QuestionID", OtherKey="QuestionID", IsForeignKey=true)]
		public Question Question
		{
			get
			{
				return this._Question.Entity;
			}
			set
			{
				Question previousValue = this._Question.Entity;
				if (((previousValue != value) 
							|| (this._Question.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Question.Entity = null;
						previousValue.Responses.Remove(this);
					}
					this._Question.Entity = value;
					if ((value != null))
					{
						value.Responses.Add(this);
						this._QuestionID = value.QuestionID;
					}
					else
					{
						this._QuestionID = default(int);
					}
					this.SendPropertyChanged("Question");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EvaluationLevel")]
	public partial class EvaluationLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EvaluationLevelID;
		
		private int _EvaluationID;
		
		private int _DimensionID;
		
		private int _LevelID;
		
		private System.DateTime _DateCreated;
		
		private System.DateTime _DateModified;
		
		private EntityRef<Evaluation> _Evaluation;
		
		private EntityRef<Level> _Level;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEvaluationLevelIDChanging(int value);
    partial void OnEvaluationLevelIDChanged();
    partial void OnEvaluationIDChanging(int value);
    partial void OnEvaluationIDChanged();
    partial void OnDimensionIDChanging(int value);
    partial void OnDimensionIDChanged();
    partial void OnLevelIDChanging(int value);
    partial void OnLevelIDChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public EvaluationLevel()
		{
			this._Evaluation = default(EntityRef<Evaluation>);
			this._Level = default(EntityRef<Level>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationLevelID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EvaluationLevelID
		{
			get
			{
				return this._EvaluationLevelID;
			}
			set
			{
				if ((this._EvaluationLevelID != value))
				{
					this.OnEvaluationLevelIDChanging(value);
					this.SendPropertyChanging();
					this._EvaluationLevelID = value;
					this.SendPropertyChanged("EvaluationLevelID");
					this.OnEvaluationLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationID", DbType="Int NOT NULL")]
		public int EvaluationID
		{
			get
			{
				return this._EvaluationID;
			}
			set
			{
				if ((this._EvaluationID != value))
				{
					if (this._Evaluation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationIDChanging(value);
					this.SendPropertyChanging();
					this._EvaluationID = value;
					this.SendPropertyChanged("EvaluationID");
					this.OnEvaluationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DimensionID", DbType="Int NOT NULL")]
		public int DimensionID
		{
			get
			{
				return this._DimensionID;
			}
			set
			{
				if ((this._DimensionID != value))
				{
					this.OnDimensionIDChanging(value);
					this.SendPropertyChanging();
					this._DimensionID = value;
					this.SendPropertyChanged("DimensionID");
					this.OnDimensionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelID", DbType="Int NOT NULL")]
		public int LevelID
		{
			get
			{
				return this._LevelID;
			}
			set
			{
				if ((this._LevelID != value))
				{
					if (this._Level.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLevelIDChanging(value);
					this.SendPropertyChanging();
					this._LevelID = value;
					this.SendPropertyChanged("LevelID");
					this.OnLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Evaluation_EvaluationLevel", Storage="_Evaluation", ThisKey="EvaluationID", OtherKey="EvaluationID", IsForeignKey=true)]
		public Evaluation Evaluation
		{
			get
			{
				return this._Evaluation.Entity;
			}
			set
			{
				Evaluation previousValue = this._Evaluation.Entity;
				if (((previousValue != value) 
							|| (this._Evaluation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Evaluation.Entity = null;
						previousValue.EvaluationLevels.Remove(this);
					}
					this._Evaluation.Entity = value;
					if ((value != null))
					{
						value.EvaluationLevels.Add(this);
						this._EvaluationID = value.EvaluationID;
					}
					else
					{
						this._EvaluationID = default(int);
					}
					this.SendPropertyChanged("Evaluation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Level_EvaluationLevel", Storage="_Level", ThisKey="LevelID", OtherKey="LevelID", IsForeignKey=true)]
		public Level Level
		{
			get
			{
				return this._Level.Entity;
			}
			set
			{
				Level previousValue = this._Level.Entity;
				if (((previousValue != value) 
							|| (this._Level.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Level.Entity = null;
						previousValue.EvaluationLevels.Remove(this);
					}
					this._Level.Entity = value;
					if ((value != null))
					{
						value.EvaluationLevels.Add(this);
						this._LevelID = value.LevelID;
					}
					else
					{
						this._LevelID = default(int);
					}
					this.SendPropertyChanged("Level");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Name;
		
		private string _Organization;
		
		private string _Title;
		
		private int _TimeZoneID;
		
		private int _StateID;
		
		private int _RoleID;
		
		private string _EmailAddress;
		
		private string _Password;
		
		private System.Nullable<System.DateTime> _LastLoginDate;
		
		private System.DateTime _DateCreated;
		
		private System.DateTime _DateModified;
		
		private EntitySet<UserLoginHistory> _UserLoginHistories;
		
		private EntitySet<Evaluation> _Evaluations;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<TimeZone> _TimeZone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOrganizationChanging(string value);
    partial void OnOrganizationChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTimeZoneIDChanging(int value);
    partial void OnTimeZoneIDChanged();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnLastLoginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginDateChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public User()
		{
			this._UserLoginHistories = new EntitySet<UserLoginHistory>(new Action<UserLoginHistory>(this.attach_UserLoginHistories), new Action<UserLoginHistory>(this.detach_UserLoginHistories));
			this._Evaluations = new EntitySet<Evaluation>(new Action<Evaluation>(this.attach_Evaluations), new Action<Evaluation>(this.detach_Evaluations));
			this._Role = default(EntityRef<Role>);
			this._TimeZone = default(EntityRef<TimeZone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Organization
		{
			get
			{
				return this._Organization;
			}
			set
			{
				if ((this._Organization != value))
				{
					this.OnOrganizationChanging(value);
					this.SendPropertyChanging();
					this._Organization = value;
					this.SendPropertyChanged("Organization");
					this.OnOrganizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeZoneID", DbType="Int NOT NULL")]
		public int TimeZoneID
		{
			get
			{
				return this._TimeZoneID;
			}
			set
			{
				if ((this._TimeZoneID != value))
				{
					if (this._TimeZone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTimeZoneIDChanging(value);
					this.SendPropertyChanging();
					this._TimeZoneID = value;
					this.SendPropertyChanged("TimeZoneID");
					this.OnTimeZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserLoginHistory", Storage="_UserLoginHistories", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<UserLoginHistory> UserLoginHistories
		{
			get
			{
				return this._UserLoginHistories;
			}
			set
			{
				this._UserLoginHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Evaluation", Storage="_Evaluations", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<Evaluation> Evaluations
		{
			get
			{
				return this._Evaluations;
			}
			set
			{
				this._Evaluations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Role", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TimeZone_User", Storage="_TimeZone", ThisKey="TimeZoneID", OtherKey="TimeZoneID", IsForeignKey=true)]
		public TimeZone TimeZone
		{
			get
			{
				return this._TimeZone.Entity;
			}
			set
			{
				TimeZone previousValue = this._TimeZone.Entity;
				if (((previousValue != value) 
							|| (this._TimeZone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TimeZone.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._TimeZone.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._TimeZoneID = value.TimeZoneID;
					}
					else
					{
						this._TimeZoneID = default(int);
					}
					this.SendPropertyChanged("TimeZone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserLoginHistories(UserLoginHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserLoginHistories(UserLoginHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Evaluations(Evaluation entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Evaluations(Evaluation entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TimeZone")]
	public partial class TimeZone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TimeZoneID;
		
		private string _TimeZoneName;
		
		private int _DaylightSavingsOffsetMinutes;
		
		private int _StandardOffsetMinutes;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTimeZoneIDChanging(int value);
    partial void OnTimeZoneIDChanged();
    partial void OnTimeZoneNameChanging(string value);
    partial void OnTimeZoneNameChanged();
    partial void OnDaylightSavingsOffsetMinutesChanging(int value);
    partial void OnDaylightSavingsOffsetMinutesChanged();
    partial void OnStandardOffsetMinutesChanging(int value);
    partial void OnStandardOffsetMinutesChanged();
    #endregion
		
		public TimeZone()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeZoneID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TimeZoneID
		{
			get
			{
				return this._TimeZoneID;
			}
			set
			{
				if ((this._TimeZoneID != value))
				{
					this.OnTimeZoneIDChanging(value);
					this.SendPropertyChanging();
					this._TimeZoneID = value;
					this.SendPropertyChanged("TimeZoneID");
					this.OnTimeZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeZoneName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string TimeZoneName
		{
			get
			{
				return this._TimeZoneName;
			}
			set
			{
				if ((this._TimeZoneName != value))
				{
					this.OnTimeZoneNameChanging(value);
					this.SendPropertyChanging();
					this._TimeZoneName = value;
					this.SendPropertyChanged("TimeZoneName");
					this.OnTimeZoneNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaylightSavingsOffsetMinutes", DbType="Int NOT NULL")]
		public int DaylightSavingsOffsetMinutes
		{
			get
			{
				return this._DaylightSavingsOffsetMinutes;
			}
			set
			{
				if ((this._DaylightSavingsOffsetMinutes != value))
				{
					this.OnDaylightSavingsOffsetMinutesChanging(value);
					this.SendPropertyChanging();
					this._DaylightSavingsOffsetMinutes = value;
					this.SendPropertyChanged("DaylightSavingsOffsetMinutes");
					this.OnDaylightSavingsOffsetMinutesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardOffsetMinutes", DbType="Int NOT NULL")]
		public int StandardOffsetMinutes
		{
			get
			{
				return this._StandardOffsetMinutes;
			}
			set
			{
				if ((this._StandardOffsetMinutes != value))
				{
					this.OnStandardOffsetMinutesChanging(value);
					this.SendPropertyChanging();
					this._StandardOffsetMinutes = value;
					this.SendPropertyChanged("StandardOffsetMinutes");
					this.OnStandardOffsetMinutesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TimeZone_User", Storage="_Users", ThisKey="TimeZoneID", OtherKey="TimeZoneID")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.TimeZone = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.TimeZone = null;
		}
	}
}
#pragma warning restore 1591
